(function(){function e(a){a=a||"unknown error";this.toString=function(){return"ThreadError: "+a}}function g(a){this.__props__={};this.__props__.group_id="group#"+(new Date).valueOf();null!=a&&this.add(a)}function c(a){this.__props__={};if(!c.isSupported)throw new e("could not create thread, not all necessary dependencies are defined");this.__props__.thread_id="thread#"+(new Date).valueOf();this.__props__.callback=a;if("function"===typeof a){a=a.toString().match(/^function\s*\([^\)]*\)\s*\{\s*((\S|\s)*\S)\s*\}$/);
if(null==a)throw new e("could not create thread, script does not contain any commands");a=['this.addEventListener( "message", function ( e ) {',"var ret = ("+a[0]+").call( e.target, e.data );","this.postMessage( ret );}, false);"].join("");a=w.URL.createObjectURL(new Blob([a],{type:"application/javascript"}))}else throw new e("could not create thread, passed argument is not a function");this.__props__.worker=new Worker(a);this.__props__.status=1;g.Default.add(this);var b=this;this.__props__.worker.addEventListener("error",
function(a){b.kill();b.__props__.status=3;throw new e("thread terminated in "+a.filename+" on line "+a.lineno+" with the following message: "+a.message);},!1)}var d={},f={};g.prototype={add:function(a){if(a instanceof Array&&0<a.length){for(var b in a)this.add(a[b]);return!0}if(!(a instanceof c))throw new e("could not add thread, passed argument is not a thread");f[a.id]||(f[a.id]=a);d[a.id]=this.__props__.group_id;return!0},remove:function(a){if(a instanceof Array&&0<a.length){for(var b in a)this.remove(a[b]);
return!0}if(!(a instanceof c))throw new e("could not remove thread, passed argument is not a thread");d[a.id]=g.Default.id;return!0},has:function(a){if(a instanceof Array&&0<a.length){for(var b in a)if(!this.has(a[b]))return!1;return!0}if(!(a instanceof c))throw new e("could not check thread, passed argument is not a thread");return d[a.id]===this.__props__.group_id},kill:function(){for(var a in d)d[a]===this.__props__.group_id&&f[a].kill()},send:function(a,b){for(var c in d)d[c]===this.__props__.group_id&&
f[c].send(a,b)},each:function(a){if("function"!==typeof a)throw new e("could not filter threads, passed argument is not a function");for(var b in d)d[b]===this.__props__.group_id&&a.call(f[b],b,f[b])},filter:function(a){null==a&&(a=function(){return 1===this.status});if("function"!==typeof a)throw new e("could not filter threads, passed argument is not a function");var b,c=[];for(b in d)d[b]===this.__props__.group_id&&!a.call(f[b],b,f[b])&&(this.remove(f[b]),c.push(f[b]));return c},toString:function(){return"[object ThreadGroup]"},
valueOf:function(){var a,b=[];for(a in d)d[a]===this.__props__.group_id&&b.push(f[a]);return b}};Object.defineProperties(g.prototype,{id:{get:function(){return this.__props__.group_id}},length:{get:function(){var a,b=0;for(a in d)d[a]===this.__props__.group_id&&++b;return b}}});g.Default=new g;g.Default.remove=function(){throw new e("you cannot remove anything from the default thread group");};c.prototype={send:function(a,b){if(1!==this.__props__.status)return!1;var c=this,d=this.__props__.worker;
if("function"===typeof b){var e=function(a){b.call(c,a.data);d.removeEventListener("message",e,!1)};d.addEventListener("message",e,!1)}d.postMessage(a)},kill:function(){if(1!==this.__props__.status)return null;this.__props__.worker.terminate();w.URL.revokeObjectURL(url);this.__props__.status=2;return!0},toString:function(){return"[object Thread]"},valueOf:function(){return this.__props__.callback}};Object.defineProperties(c.prototype,{status:{get:function(){return this.__props__.status}},running:{get:function(){return 1===
this.__props__.status}},terminated:{get:function(){return 1!==this.__props__.status}},id:{get:function(){return this.__props__.thread_id}},group_id:{get:function(){return d[this.__props__.thread_id]}}});c.RUNNING=1;c.TERMINATED=2;c.ERROR=3;c.version="0.2.7";c.kill=function(a){return a instanceof c||a instanceof g?a.kill():!1};c.isSupported=!(!w.URL||!w.URL.createObjectURL||!w.URL.revokeObjectURL||!w.Blob||!w.Worker);w.Thread=c;w.ThreadError=e;w.ThreadGroup=g})();
